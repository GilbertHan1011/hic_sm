#########################################
# THIS IS A TYPICAL config.yml TEMPLATE
# most of the settings present here
# are GO for mapping production data
# but nonetheless user must consider
# carefully every presented option
#########################################

#########################################
# When commmenting parameters out, make sure
# that each section still has at least one
# uncommented parameter, otherwise it
# will not get properly parsed.
#########################################



#######################################
# provide paths to your raw input data (fastq-s):
#######################################
# Fastqs can be provided as:
# -- a pairs of relative/absolute paths
# -- sra:<SRA_NUMBER>, optionally followed by the indices of the first and
# the last entry in the SRA in the form of "?start=<first>&end=<last>

# Alternatively, fastqs can be specified as either paths relative to the 
# project folder or as absolute paths.
input:
    raw_reads_paths:
        Cl_01A03_NT_captured_test:
            lane1:
                - ../../seqdata/3975F1-1_250411_A01563_0288_BHWFCMDRX5_CGAATACG-GTCGGTAA_L001_R1_001.fastq.gz
                - ../../seqdata/3975F1-1_250411_A01563_0288_BHWFCMDRX5_CGAATACG-GTCGGTAA_L001_R2_001.fastq.gz
        Cl_01A03_dTAG_captured_test:
            lane1:
                - ../../seqdata/3975F2-1_250411_A01563_0288_BHWFCMDRX5_GTCCTTGA-TCAGACGA_L001_R1_001.fastq.gz
                - ../../seqdata/3975F2-1_250411_A01563_0288_BHWFCMDRX5_GTCCTTGA-TCAGACGA_L001_R2_001.fastq.gz
        Cl_01F12_NT_captured_test:
            lane1:
                - ../../seqdata/3975F3-1_250411_A01563_0288_BHWFCMDRX5_CAGTGCTT-ACCTGGAA_L001_R1_001.fastq.gz
                - ../../seqdata/3975F3-1_250411_A01563_0288_BHWFCMDRX5_CAGTGCTT-ACCTGGAA_L001_R2_001.fastq.gz
        Cl_01F12_dTAG_captured_test:
            lane1:
                - ../../seqdata/3975F4-1_250411_A01563_0288_BHWFCMDRX5_TCCATTGC-AGACCGTA_L001_R1_001.fastq.gz
                - ../../seqdata/3975F4-1_250411_A01563_0288_BHWFCMDRX5_TCCATTGC-AGACCGTA_L001_R2_001.fastq.gz
        Cl_03A11_NT_captured_test:
            lane1:
                - ../../seqdata/3975F5-1_250411_A01563_0288_BHWFCMDRX5_GTCGATTG-ACGGTCTT_L001_R1_001.fastq.gz
                - ../../seqdata/3975F5-1_250411_A01563_0288_BHWFCMDRX5_GTCGATTG-ACGGTCTT_L001_R2_001.fastq.gz
        Cl_03A11_dTAG_captured_test:
            lane1:
                - ../../seqdata/3975F6-1_250411_A01563_0288_BHWFCMDRX5_ATAACGCC-TGAACCTG_L001_R1_001.fastq.gz
                - ../../seqdata/3975F6-1_250411_A01563_0288_BHWFCMDRX5_ATAACGCC-TGAACCTG_L001_R2_001.fastq.gz
        Cl_10H07_NT_captured_test:
            lane1:
                - ../../seqdata/3975F7-1_250411_A01563_0288_BHWFCMDRX5_GCCTTAAC-AGCTCCTA_L001_R1_001.fastq.gz
                - ../../seqdata/3975F7-1_250411_A01563_0288_BHWFCMDRX5_GCCTTAAC-AGCTCCTA_L001_R2_001.fastq.gz
        Cl_10H07_dTAG_captured_test:
            lane1:
                - ../../seqdata/3975F8-1_250411_A01563_0288_BHWFCMDRX5_GGTATAGG-CTGGAGTA_L001_R1_001.fastq.gz
                - ../../seqdata/3975F8-1_250411_A01563_0288_BHWFCMDRX5_GGTATAGG-CTGGAGTA_L001_R2_001.fastq.gz
        Cl_01A03_NT:
            lane1:
                - ../../seqdata/3919F1-1_250130_A01563_0260_BHTHVJDRX5_CGAATACG-GTCGGTAA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F1-1_250130_A01563_0260_BHTHVJDRX5_CGAATACG-GTCGGTAA_L002_R2_001.fastq.gz
        Cl_01A03_dTAG:
            lane1:
                - ../../seqdata/3919F2-1_250130_A01563_0260_BHTHVJDRX5_GTCCTTGA-TCAGACGA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F2-1_250130_A01563_0260_BHTHVJDRX5_GTCCTTGA-TCAGACGA_L002_R2_001.fastq.gz
        Cl_01F12_NT:
            lane1:
                - ../../seqdata/3919F3-1_250130_A01563_0260_BHTHVJDRX5_CAGTGCTT-ACCTGGAA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F3-1_250130_A01563_0260_BHTHVJDRX5_CAGTGCTT-ACCTGGAA_L002_R2_001.fastq.gz
        Cl_01F12_dTAG:
            lane1:
                - ../../seqdata/3919F4-1_250130_A01563_0260_BHTHVJDRX5_TCCATTGC-AGACCGTA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F4-1_250130_A01563_0260_BHTHVJDRX5_TCCATTGC-AGACCGTA_L002_R2_001.fastq.gz
        Cl_03A11_NT:
            lane1:
                - ../../seqdata/3919F5-1_250130_A01563_0260_BHTHVJDRX5_GTCGATTG-ACGGTCTT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F5-1_250130_A01563_0260_BHTHVJDRX5_GTCGATTG-ACGGTCTT_L002_R2_001.fastq.gz
        Cl_03A11_dTAG:
            lane1:
                - ../../seqdata/3919F6-1_250130_A01563_0260_BHTHVJDRX5_ATAACGCC-TGAACCTG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F6-1_250130_A01563_0260_BHTHVJDRX5_ATAACGCC-TGAACCTG_L002_R2_001.fastq.gz
        Cl_10H07_NT:
            lane1:
                - ../../seqdata/3919F7-1_250130_A01563_0260_BHTHVJDRX5_GCCTTAAC-AGCTCCTA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F7-1_250130_A01563_0260_BHTHVJDRX5_GCCTTAAC-AGCTCCTA_L002_R2_001.fastq.gz
        Cl_10H07_dTAG:
            lane1:
                - ../../seqdata/3919F8-1_250130_A01563_0260_BHTHVJDRX5_GGTATAGG-CTGGAGTA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F8-1_250130_A01563_0260_BHTHVJDRX5_GGTATAGG-CTGGAGTA_L002_R2_001.fastq.gz
        Cl_01B1_NT:
            lane1:
                - ../../seqdata/3919F9-1_250130_A01563_0260_BHTHVJDRX5_TCTAGGAG-AGGTCACT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F9-1_250130_A01563_0260_BHTHVJDRX5_TCTAGGAG-AGGTCACT_L002_R2_001.fastq.gz
        Cl_01B1_dTAG:
            lane1:
                - ../../seqdata/3919F10-1_250130_A01563_0260_BHTHVJDRX5_TGCGTAAC-GATAGGCT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F10-1_250130_A01563_0260_BHTHVJDRX5_TGCGTAAC-GATAGGCT_L002_R2_001.fastq.gz
        Cl_01H07_NT:
            lane1:
                - ../../seqdata/3919F11-1_250130_A01563_0260_BHTHVJDRX5_CTTGCTAG-GGAGATGA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F11-1_250130_A01563_0260_BHTHVJDRX5_CTTGCTAG-GGAGATGA_L002_R2_001.fastq.gz
        Cl_01H07_dTAG:
            lane1:
                - ../../seqdata/3919F12-1_250130_A01563_0260_BHTHVJDRX5_AGCGAGAT-GATACTGG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F12-1_250130_A01563_0260_BHTHVJDRX5_AGCGAGAT-GATACTGG_L002_R2_001.fastq.gz
        Cl_03G04_NT:
            lane1:
                - ../../seqdata/3919F13-1_250130_A01563_0260_BHTHVJDRX5_TATGGCAC-TCTCGCAA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F13-1_250130_A01563_0260_BHTHVJDRX5_TATGGCAC-TCTCGCAA_L002_R2_001.fastq.gz
        Cl_03G04_dTAG:
            lane1:
                - ../../seqdata/3919F14-1_250130_A01563_0260_BHTHVJDRX5_GAATCACC-CTTCGTTC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F14-1_250130_A01563_0260_BHTHVJDRX5_GAATCACC-CTTCGTTC_L002_R2_001.fastq.gz
        Cl_11A07_NT:
            lane1:
                - ../../seqdata/3919F15-1_250130_A01563_0260_BHTHVJDRX5_GTAAGGTG-GCAATTCG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F15-1_250130_A01563_0260_BHTHVJDRX5_GTAAGGTG-GCAATTCG_L002_R2_001.fastq.gz
        Cl_11A07_dTAG:
            lane1:
                - ../../seqdata/3919F16-1_250130_A01563_0260_BHTHVJDRX5_CGAGAGAA-TCTCTTCC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F16-1_250130_A01563_0260_BHTHVJDRX5_CGAGAGAA-TCTCTTCC_L002_R2_001.fastq.gz
        Cl_01B11_NT:
            lane1:
                - ../../seqdata/3919F17-1_250130_A01563_0260_BHTHVJDRX5_CGCAACTA-GAATCCGA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F17-1_250130_A01563_0260_BHTHVJDRX5_CGCAACTA-GAATCCGA_L002_R2_001.fastq.gz
        Cl_01B11_dTAG:
            lane1:
                - ../../seqdata/3919F18-1_250130_A01563_0260_BHTHVJDRX5_CACAGACT-TGGTACAG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F18-1_250130_A01563_0260_BHTHVJDRX5_CACAGACT-TGGTACAG_L002_R2_001.fastq.gz
        Cl_02A11_NT:
            lane1:
                - ../../seqdata/3919F19-1_250130_A01563_0260_BHTHVJDRX5_TGGAAGCA-GTACTCTC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F19-1_250130_A01563_0260_BHTHVJDRX5_TGGAAGCA-GTACTCTC_L002_R2_001.fastq.gz
        Cl_02A11_dTAG:
            lane1:
                - ../../seqdata/3919F20-1_250130_A01563_0260_BHTHVJDRX5_CAATAGCC-TGCGTAGA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F20-1_250130_A01563_0260_BHTHVJDRX5_CAATAGCC-TGCGTAGA_L002_R2_001.fastq.gz
        Cl_04D01_NT:
            lane1:
                - ../../seqdata/3919F21-1_250130_A01563_0260_BHTHVJDRX5_CTCGAACA-GGAATTGC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F21-1_250130_A01563_0260_BHTHVJDRX5_CTCGAACA-GGAATTGC_L002_R2_001.fastq.gz
        Cl_04D01_dTAG:
            lane1:
                - ../../seqdata/3919F22-1_250130_A01563_0260_BHTHVJDRX5_GGCAAGTT-CTTCTGAG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F22-1_250130_A01563_0260_BHTHVJDRX5_GGCAAGTT-CTTCTGAG_L002_R2_001.fastq.gz
        Cl_11G10_NT:
            lane1:
                - ../../seqdata/3919F23-1_250130_A01563_0260_BHTHVJDRX5_AGCTACCA-CTTAGGAC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F23-1_250130_A01563_0260_BHTHVJDRX5_AGCTACCA-CTTAGGAC_L002_R2_001.fastq.gz
        Cl_11G10_dTAG:
            lane1:
                - ../../seqdata/3919F24-1_250130_A01563_0260_BHTHVJDRX5_CAGCATAC-TCTAACGC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F24-1_250130_A01563_0260_BHTHVJDRX5_CAGCATAC-TCTAACGC_L002_R2_001.fastq.gz
        Cl_01C7_NT:
            lane1:
                - ../../seqdata/3919F25-1_250130_A01563_0260_BHTHVJDRX5_CGTATCTC-GTACCTTG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F25-1_250130_A01563_0260_BHTHVJDRX5_CGTATCTC-GTACCTTG_L002_R2_001.fastq.gz
        Cl_01C7_dTAG:
            lane1:
                - ../../seqdata/3919F26-1_250130_A01563_0260_BHTHVJDRX5_TTACGTGC-CAAGGTCT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F26-1_250130_A01563_0260_BHTHVJDRX5_TTACGTGC-CAAGGTCT_L002_R2_001.fastq.gz
        Cl_02C12_NT:
            lane1:
                - ../../seqdata/3919F27-1_250130_A01563_0260_BHTHVJDRX5_AGCTAAGC-GTAACGAC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F27-1_250130_A01563_0260_BHTHVJDRX5_AGCTAAGC-GTAACGAC_L002_R2_001.fastq.gz
        Cl_02C12_dTAG:
            lane1:
                - ../../seqdata/3919F28-1_250130_A01563_0260_BHTHVJDRX5_AAGACACC-TCGGTTAC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F28-1_250130_A01563_0260_BHTHVJDRX5_AAGACACC-TCGGTTAC_L002_R2_001.fastq.gz
        Cl_05A11_NT:
            lane1:
                - ../../seqdata/3919F29-1_250130_A01563_0260_BHTHVJDRX5_CAACTCCA-ACGGATTC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F29-1_250130_A01563_0260_BHTHVJDRX5_CAACTCCA-ACGGATTC_L002_R2_001.fastq.gz
        Cl_05A11_dTAG:
            lane1:
                - ../../seqdata/3919F30-1_250130_A01563_0260_BHTHVJDRX5_GATCTTGC-TGCTCATG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F30-1_250130_A01563_0260_BHTHVJDRX5_GATCTTGC-TGCTCATG_L002_R2_001.fastq.gz
        Cl_11H12_NT:
            lane1:
                - ../../seqdata/3919F31-1_250130_A01563_0260_BHTHVJDRX5_CTTCACTG-GTCCTAAG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F31-1_250130_A01563_0260_BHTHVJDRX5_CTTCACTG-GTCCTAAG_L002_R2_001.fastq.gz
        Cl_11H12_dTAG:
            lane1:
                - ../../seqdata/3919F32-1_250130_A01563_0260_BHTHVJDRX5_CTCGACTT-GGTCAGAT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F32-1_250130_A01563_0260_BHTHVJDRX5_CTCGACTT-GGTCAGAT_L002_R2_001.fastq.gz
        Cl_01E9_NT:
            lane1:
                - ../../seqdata/3919F33-1_250130_A01563_0260_BHTHVJDRX5_GTACACCT-CATGAGGA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F33-1_250130_A01563_0260_BHTHVJDRX5_GTACACCT-CATGAGGA_L002_R2_001.fastq.gz
        Cl_01E9_dTAG:
            lane1:
                - ../../seqdata/3919F34-1_250130_A01563_0260_BHTHVJDRX5_CCAAGGTT-GCTATCCT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F34-1_250130_A01563_0260_BHTHVJDRX5_CCAAGGTT-GCTATCCT_L002_R2_001.fastq.gz
        Cl_02D01_NT:
            lane1:
                - ../../seqdata/3919F35-1_250130_A01563_0260_BHTHVJDRX5_GAACGGTT-ATTCCTCC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F35-1_250130_A01563_0260_BHTHVJDRX5_GAACGGTT-ATTCCTCC_L002_R2_001.fastq.gz
        Cl_02D01_dTAG:
            lane1:
                - ../../seqdata/3919F36-1_250130_A01563_0260_BHTHVJDRX5_CCAGTTGA-ATGACGTC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F36-1_250130_A01563_0260_BHTHVJDRX5_CCAGTTGA-ATGACGTC_L002_R2_001.fastq.gz
        Cl_05D02_NT:
            lane1:
                - ../../seqdata/3919F37-1_250130_A01563_0260_BHTHVJDRX5_GTCATCGT-TTAAGCGG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F37-1_250130_A01563_0260_BHTHVJDRX5_GTCATCGT-TTAAGCGG_L002_R2_001.fastq.gz
        Cl_05D02_dTAG:
            lane1:
                - ../../seqdata/3919F38-1_250130_A01563_0260_BHTHVJDRX5_CAATGCGA-AGTTCGTC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F38-1_250130_A01563_0260_BHTHVJDRX5_CAATGCGA-AGTTCGTC_L002_R2_001.fastq.gz
        Cl_12G10_NT:
            lane1:
                - ../../seqdata/3919F39-1_250130_A01563_0260_BHTHVJDRX5_GGTTGAAC-AACGTGGA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F39-1_250130_A01563_0260_BHTHVJDRX5_GGTTGAAC-AACGTGGA_L002_R2_001.fastq.gz
        Cl_12G10_dTAG:
            lane1:
                - ../../seqdata/3919F40-1_250130_A01563_0260_BHTHVJDRX5_CTTCGGTT-CTCTGGTT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F40-1_250130_A01563_0260_BHTHVJDRX5_CTTCGGTT-CTCTGGTT_L002_R2_001.fastq.gz
        Cl_01F3_NT:
            lane1:
                - ../../seqdata/3919F41-1_250130_A01563_0260_BHTHVJDRX5_CGGCATTA-TGACTGAC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F41-1_250130_A01563_0260_BHTHVJDRX5_CGGCATTA-TGACTGAC_L002_R2_001.fastq.gz
        Cl_01F3_dTAG:
            lane1:
                - ../../seqdata/3919F42-1_250130_A01563_0260_BHTHVJDRX5_CACGCAAT-ATGGAAGG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F42-1_250130_A01563_0260_BHTHVJDRX5_CACGCAAT-ATGGAAGG_L002_R2_001.fastq.gz
        Cl_02D07_NT:
            lane1:
                - ../../seqdata/3919F43-1_250130_A01563_0260_BHTHVJDRX5_GGAATGTC-GTGTTCCT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F43-1_250130_A01563_0260_BHTHVJDRX5_GGAATGTC-GTGTTCCT_L002_R2_001.fastq.gz
        Cl_02D07_dTAG:
            lane1:
                - ../../seqdata/3919F44-1_250130_A01563_0260_BHTHVJDRX5_TGGTGAAG-GCTGTAAG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F44-1_250130_A01563_0260_BHTHVJDRX5_TGGTGAAG-GCTGTAAG_L002_R2_001.fastq.gz
        Cl_10G02_NT:
            lane1:
                - ../../seqdata/3919F45-1_250130_A01563_0260_BHTHVJDRX5_GGACATCA-TGCAGGTA_L002_R1_001.fastq.gz
                - ../../seqdata/3919F45-1_250130_A01563_0260_BHTHVJDRX5_GGACATCA-TGCAGGTA_L002_R2_001.fastq.gz
        Cl_10H02_dTAG:
            lane1:
                - ../../seqdata/3919F46-1_250130_A01563_0260_BHTHVJDRX5_GGTGTACA-TAGCGTCT_L002_R1_001.fastq.gz
                - ../../seqdata/3919F46-1_250130_A01563_0260_BHTHVJDRX5_GGTGTACA-TAGCGTCT_L002_R2_001.fastq.gz
        Cl_13A03_NT:
            lane1:
                - ../../seqdata/3919F47-1_250130_A01563_0260_BHTHVJDRX5_GATAGCCA-CTGTGTTG_L002_R1_001.fastq.gz
                - ../../seqdata/3919F47-1_250130_A01563_0260_BHTHVJDRX5_GATAGCCA-CTGTGTTG_L002_R2_001.fastq.gz
        Cl_13A03_dTAG:
            lane1:
                - ../../seqdata/3919F48-1_250130_A01563_0260_BHTHVJDRX5_CCACAACA-TGTGGTAC_L002_R1_001.fastq.gz
                - ../../seqdata/3919F48-1_250130_A01563_0260_BHTHVJDRX5_CCACAACA-TGTGGTAC_L002_R2_001.fastq.gz
    library_groups:
        dTAG:
            - Cl_01A03_dTAG
            - Cl_01F12_dTAG
            - Cl_03A11_dTAG
            - Cl_10H07_dTAG
            - Cl_01B1_dTAG
            - Cl_01H07_dTAG
            - Cl_03G04_dTAG
            - Cl_11A07_dTAG
            - Cl_01B11_dTAG
            - Cl_02A11_dTAG
            - Cl_04D01_dTAG
            - Cl_11G10_dTAG
            - Cl_01C7_dTAG
            - Cl_02C12_dTAG
            - Cl_05A11_dTAG
            - Cl_11H12_dTAG
            - Cl_01E9_dTAG
            - Cl_02D01_dTAG
            - Cl_05D02_dTAG
            - Cl_12G10_dTAG
            - Cl_01F3_dTAG
            - Cl_02D07_dTAG
            - Cl_10H02_dTAG
            - Cl_13A03_dTAG
        DMSO:
            - Cl_01A03_NT
            - Cl_01F12_NT
            - Cl_03A11_NT
            - Cl_10H07_NT
            - Cl_01B1_NT
            - Cl_01H07_NT
            - Cl_03G04_NT
            - Cl_11A07_NT
            - Cl_01B11_NT
            - Cl_02A11_NT
            - Cl_04D01_NT
            - Cl_11G10_NT
            - Cl_01C7_NT
            - Cl_02C12_NT
            - Cl_05A11_NT
            - Cl_11H12_NT
            - Cl_01E9_NT
            - Cl_02D01_NT
            - Cl_05D02_NT
            - Cl_12G10_NT
            - Cl_01F3_NT
            - Cl_02D07_NT
            - Cl_10G02_NT
            - Cl_13A03_NT


    truncate_fastq_reads: 0

    genome:
        assembly_name: 'mm10_custom_GT'
        bwa_index_wildcard_path: '../../4Clike/refgen/mm10_custom.fa*'
        chrom_sizes_path: '../../4Clike/refgen/mm10_custom_chromsizes.txt'

do_fastqc: False

# Control how reads are mapped to the reference genomes.
map:
    mapper: 'bwa-mem2' #available: 'bwa-mem', 'bwa-mem2', 'bwa-meme', 'chromap'
    # If using 'chromap', all parsing parameters are ignored, since chromap
    # outputs .pairs files directly.
    # In addition, chromap saves a minimal .pairs file with only the strictly requires
    # columns. It can not save mapq values, hence you have to remove the filter
    # that uses it - but you can set a custom minimum mapq value for the mapping
    # itself with -q extra argument to chromap.
    #
    # If 'chunksize' is non-zero, each input file gets split into multiple chunks,
    # each mapped separately. Useful for mapping on clusters with many
    # relatively weak nodes.
    # The optimal chunk size is defined by the balance between mapping and merging.
    # Smaller chunks (~30M) are better for clusters with many weak nodes,
    # however, having >~10 chunks per run slow down merging.
    chunksize: 0

    # Specify extra BWA/chromap mapping options.
    mapping_options: ''

    # Specify fastp trim options.
    #i.e. parameters
    #--detect_adapter_for_pe -q 15
    trim_options: ''

    # A more technical option, use a custom script to split fastq files from SRA 
    # into two files, one per read side. By default it is true, which is
    # faster (because we can use multi-threaded compression), but less
    # stable. Set to false if you download files from SRA and bwa complains
    # about unpaired reads.
    use_custom_split: True

# Control how read alignments are converted ('parsed') into Hi-C pairs.
parse:
    # If 'make_pairsam' is True, parsed Hi-C pairs will store complete
    # alignment records in the SAM format (the resulting hybrid between the
    # .pairs and .sam formats is called '.pairsam'). Such files can be useful for
    # thorough investigation of Hi-C data. Downstream of parsing, pairsams
    # are split into .pairs and .bam, and .bam alignments are tagged with
    # Hi-C related information. 'make_pairsam' roughly doubles the storage
    # and I/O requirements and should be used only when absolutely needed.
    # NOTE: when 'make_pairsam' is False, the initial output of parsing is still
    # called '.pairsam' despite missing SAM alignments, for technical reasons.
    make_pairsam: False

    # When 'make_pairsam' is True, enabling 'drop_seq' erases sequences and
    # Phred scores from the SAM alignments in .pairsam and .bam output files.
    # Enable to make lightweight .pairsam/.bam output.
    # NOTE: when 'make_pairsam' is False, 'drop_seq' is ignored.
    drop_seq: True

    # Enable 'drop_readid' to drop readID from .pairs files to create
    # lightweight .pairs files. This would prevent one from detecting
    # optical/clustering duplicates during dedup.
    # NOTE: does not affect alignment records in the .pairsam files and
    # subsequently .bam files after .pairsam splitting.
    drop_readid: False

    # When 'keep_unparsed_bams' is True, distiller preserves the _immediate_
    # output of bwa in a .bam format. Could be used as a faster alternative
    # to 'make_pairsam' when alignments are needed, but tagging them with Hi-C
    # related information is not necessary.
    keep_unparsed_bams: False

    # Pass extra options to pairtools parse, on top of the ones specified by
    # flags 'make_pairsam', 'drop_readid', 'drop_seq'. The default value
    # enables storing MAPQ scores in the .pairsam/.pairs output, which are
    # used later for filtering/binning. The default walks-policy is 'mask'
    # which masks complex walks in long reads.
    parsing_options: '--add-columns mapq --walks-policy 5unique'

    # Phasing only works with 'bwa-mem', 'bwa-mem2' or bwa-meme mappers.
    # If 'do_phase' is True, distiller will try to phase Hi-C pairs using
    # the 'tag_mode' and 'suffixes' parameters.
    # 'tag_mode' can be 'XA' (default) or 'XB'.
    # 'XB' mode is slightly more accurate, but requires the 'bwa-mem' mapper with
    # version of 'bwa-mem' that supports 'XB' tags (>=0.7.18).
    # Suffixes are used to identify phases of chromosomes in the reference genome.
    # For example, if the reference genome has chromosomes 'chr1_cast', 'chr1_129',
    # then the suffixes '_cast' and '_129' will be used to identify the phases.
    # If 'do_phase' is False, no phasing will be performed.
    # NOTE: phasing requires parsing with --min-mapq 0 --add-columns XA,NM,AS,XS,mapq
    # (or XB,NM,AS,XS,mapq for 'XB' tag mode). This means that the
    # 'parsing_options' parameter must include these options, and that the phased pairs
    # contain multimapped reads. Please take care of the correct filtering of
    # phased pairs in the binning step.
    # Additionally, you probably want to add the following into the dedup_options, to
    # take phasing into account at that step:
    # --extra-col-pair phase1 phase1 --extra-col-pair phase2 phase2
    phase: 
        do_phase: False
        tag_mode: XA
        suffixes:
            - _cast
            - _129

# Control how PCR/optical duplicates are detected in the data.
dedup:
    # PCR/optical duplicates are detected as Hi-C pairs with matching locations
    # on both sides. 'max_mismatch_bp' controls the maximal allowed mismatch in
    # mapped locations on either side for two pairs to be still considered as
    # duplicates.
    max_mismatch_bp: 0
    save_by_tile_dups: True
    dedup_options: ""

# Scaling, or P(s), calculated using pairtools on the output of deduplication.
# Output stored next to the deduplicated pairs.
scaling_pairs:
    do_scaling: True
    # Shortest distance to consider when calculating P(s).
    min_distance: 10
    # Longest distance to consider when calculating P(s).
    # If False, use the longest chromosome
    max_distance: False
    # How many bins to use when calculating P(s).
    n_dist_bins_decade: 10
    # Any additional options to pass to pairtools scaling.
    scaling_options: ''

# Control how Hi-C pairs are binned into contact maps, stored in .cool files.
bin:
    # Specify which resolutions should be included in the multi-resolution .cool file.
    # The lowest (base) resolution _must_ be the common denominator of all other
    # resolutions.
    resolutions:
        - 10000000
        - 5000000
        - 2500000
        - 1000000
        - 500000
        - 250000
        - 100000
        - 50000
        - 25000
        - 10000
        - 5000
        - 2000
        - 1000

    # Specify if the multi-resolution .cool output files should be balanced.
    balance: True

    # Pass additional parameters to cooler balance:
    # balance_options: ''

    # Specify additional filters applied to pairs during binning.
    # Multiple filters are allowed; for each filter, all pairs satisfying the
    # given filter expression will be binned into a separate cooler.
    # Filters are specified using the following syntax:
    # {filter_name}: '{a valid Python expression}'
    filters:
        # no_filter: ''
        # comment out the following when using chromap:
        mapq_30: '(mapq1>=30) and (mapq2>=30)'
    
    # Convert .mcool files to .hic files (uses hictk)
    make_hic: False

output:
    dirs:
        downloaded_fastqs: 'inputs/fastq/downloaded_fastqs'
        fastqc: 'results/fastqc'
        processed_fastqs: 'results/processed_fastqs'
        mapped_parsed_sorted_chunks: 'results/mapped_parsed_sorted_chunks'
        pairs_runs: 'results/pairs_runs'
        pairs_library: 'results/pairs_library'
        coolers_library: 'results/coolers_library'
        coolers_library_group: 'results/coolers_library_group'
        stats_library_group: 'results/stats_library_group'
        multiqc: 'results/multiqc'

# To use automatic upload to resgen, add your credentials to  ~/.resgen/credentials
# (see https://docs-python.resgen.io/cli.html#logging-in)
resgen:
    upload: True
    user: ilya
    project: GTVM_microC
